# Docker compose to set up containers for all services you need:
# VPN
#   Sonarr, Radarr, Lidarr, Qbittorrent
# Non-VPN
#   Plex, get_iplayer
# Before running docker-compose, you should pre-create all of the following folders.
# Folders for Docker State:
#  /data/dockerdata.             - root where this docker-compose.yml should live
#  /data/dockerdata/plex         - Plex config and DB
#  /data/dockerdata/sonarr       - Sonarr config and DB
#  /data/dockerdata/radarr       - Radarr config and DB
#  /data/dockerdata/lidarr       - Lidarr config and DB
#  /data/dockerdata/qbt          - QBitorrent config and DB
#  /data/dockerdata/prowlarr     - Prowlarr config and DB
#  /data/dockerdata/get_iplayer  - Get_iPlayer config and DB
# Folders for Media etc:    
#  /data/photo                   - Root storage for photo files
#  /data/music                   - Root storage for music files
#  /data/video                   - Root storage for video files
#  /data/video/TV                - folder for Sonarr/Plex TV shows
#  /data/video/Films             - folder for Radarr/Plex Movies
#  /data/video/Downloads         - QBT folder for TV downloads (that Sonarr will process)
#  /data/video/FilmDownloads     - QBT folder for Movie downloads (that Radarr will process)
#  /data/video/MusicDownloads    - QBT folder for Music downloads (that Lidarr will process)
#  /data/video/Downloads/iPlayer - Destination folder for get_iplayer. See https://github.com/Webreaper/SonarrAutoImport
# 
# Note that Sonarr and Radarr don't necessarily need the VPN if you're using Prowlarr for the indexers. 
# But Prowlarr should be behind the VPN to avoid ISPs that block indexers.
services:

  wireguard:
        image: lscr.io/linuxserver/wireguard:latest
        container_name: wireguard
        cap_add:
            - NET_ADMIN
            - SYS_MODULE #optional
        privileged: true
        tty: true
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
            #- SERVERURL=wireguard.domain.com #optional
            #- SERVERPORT=51820 #optional
            #- PEERS=1 #optional
            #- PEERDNS=auto #optional
            #- INTERNAL_SUBNET=10.13.13.0 #optional
            # - ALLOWEDIPS=0.0.0.0/0 #optional
            #- PERSISTENTKEEPALIVE_PEERS= #optional
            #- LOG_CONFS=true #optional
        volumes:
            - /home/devito/.config/wgi/:/config
            #- /lib/modules:/lib/modules #optional
        ports:
            - 51820:51820/udp
            # QBT UI Port
            - 8090:8090
            # Bittorrent port
            - 6881:6881
            - 6881:6881/udp
            # Web port
            - 8080:8080
            - 9117:9117
            # Sonarr port
            - 8989:8989
            # Radarr port
            - 7878:7878
            # Lidarr port
            - 8686:8686
            # Prowlarr port
            - 9696:9696
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        restart: unless-stopped
    qbittorrent:
        image: linuxserver/qbittorrent
        container_name: qbittorrent
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/London
            - UMASK_SET=022
            - WEBUI_PORT=8090
        volumes:
            - /data/dockerdata/qbt/config/qBittorrent:/config
            - /data/video/Seeding:/downloads
            - /data/video/Downloads:/tvdownloads
            - /data/video/FilmDownloads:/filmdownloads
            - /data/video/MusicDownloads:/musicdownloads
        restart: unless-stopped
        network_mode: service:wireguard
 
    prowlarr:
        image: linuxserver/prowlarr:develop
        container_name: prowlarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=GB
        volumes:
            - /data/dockerdata/prowlarr:/config
        restart: unless-stopped
        depends_on:
            - qbittorrent
        network_mode: service:wireguard
 
    sonarr:
        image: linuxserver/sonarr:latest
        container_name: sonarr_v3
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=GB
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /data/dockerdata/sonarr/config:/config
            - /data/video/TV:/tv
            - /data/video/Downloads:/downloads
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
 
    radarr:
        image: linuxserver/radarr:latest
        container_name: radarr_v3
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=GB
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /data/dockerdata/radarr3/config:/config
            - /data/video/Films:/movies
            - /data/video/FilmDownloads:/downloads
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
 
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=GB
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /data/dockerdata/lidarr/config:/config
            - /data/music:/music
            - /data/video/MusicDownloads:/downloads
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
 
    readarr:
        image: lscr.io/linuxserver/readarr:develop
        container_name: readarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=GB
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /data/dockerdata/readarr/config:/config
            - /data/books:/books
            - /data/books/BookDownloads:/downloads
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
 
    lazy:
        image: lscr.io/linuxserver/lazylibrarian:latest
        container_name: lazy
        environment:
            - PUID=1000
            - PGID=1000
            - DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
        volumes:
            - /data/dockerdata/lazylib/config:/config
            - /data/books:/books
            - /data/books/BookDownloads:/downloads
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
    bazarr:
        image: lscr.io/linuxserver/bazarr:latest
        container_name: bazarr
        environment:
            - PUID=1000
            - PGID=1000
        volumes:
            - /data/dockerdata/bazarr/config:/config
            - /data/video/TV:/tv
            - /data/video/Films:/movies
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard

    jellyfin:
        image: jellyfin/jellyfin
        container_name: jellyfin
        #user: uid:gid
        privileged: true
        environment:
            PGID: '101'
            PUID: '1024'
        network_mode: host
        volumes:
            - /data/dockerdata/jellyfin:/config
            - /data/video/TV:/tv:rw
            - /data/video/Films:/movies:rw
            - /data/video/music:/music:rw
        restart: unless-stopped
        depends_on:
            - prowlarr
            - qbittorrent
        network_mode: service:wireguard
 
    get_player:
        container_name: get_iplayer
        image: kolonuk/get_iplayer
        environment:
            PGID: '101'
            PUID: '1024'
        ports:
            - 8181:8181/tcp
        restart: unless-stopped
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /data/dockerdata/get_iplayer:/root/.get_iplayer:rw
            - /data/video/Downloads/iPlayer:/root/output:rw
        network_mode: service:wireguard
 
